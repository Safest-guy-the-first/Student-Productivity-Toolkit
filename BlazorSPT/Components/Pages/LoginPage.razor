@page "/login"
@inject BlazorSPT.Services.AuthService AuthService
@inject NavigationManager Navigation
@using SPT_API.Data.DTOs

<PageTitle>Login</PageTitle>


<div class="login-container">
    <div class="login-box">
        <h2 class="login-title">Sign in</h2>

        <EditForm Model="@LoginRequest" OnValidSubmit="HandleLogin" FormName="LoginForm">
            <DataAnnotationsValidator/>
            <div class="form-group">
                <InputText @bind-Value="LoginRequest._UserName"
                class="form-control"
                placeholder="Username" />
            </div>

            <div class="form-group">
                <InputText @bind-Value="LoginRequest._Email"
                class="form-control"
                placeholder="Email" />
            </div>

            <div class="form-group password-field">
                <input key="type" @bind="LoginRequest._Password"
                type="@(ShowPassword? "text":"password")"
                class="form-control password-input"
                placeholder="Password" />
                <button type="button" class="btn-toggle" @onclick="TogglePass">
                    @(ShowPassword ? "hide" : "show")
                </button>

            </div>

            <div class="forgot-password">
                <a href="#">Forgot Password?</a>
            </div>

            <button type="submit" class="btn-signin">Sign in</button>
        </EditForm>


        <div class="signup-link">
            <span>Don't have an account?</span>
            <a href="/signup">Sign up</a>
        </div>
    </div>
</div>


@code {
    private LoginRequestDTO LoginRequest = new();
    private bool ShowPassword = true;
    private string errorMessage = string.Empty;








    public void TogglePass()
    {
        ShowPassword = !ShowPassword;
        Console.WriteLine(ShowPassword);
    }

    private async Task HandleLogin()
    {
        var result = await AuthService.Login(LoginRequest);
        if (result.Success == false)
        {
            errorMessage = result.Message;
        }
        Navigation.NavigateTo("/main");
    }
}